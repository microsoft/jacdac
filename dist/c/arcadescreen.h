// Autogenerated C header file for Arcade screen
#ifndef _JACDAC_SPEC_ARCADE_SCREEN_H
#define _JACDAC_SPEC_ARCADE_SCREEN_H 1

#define JD_SERVICE_CLASS_ARCADE_SCREEN  0x16fa36e5

// enum DisplayFlags (uint8_t)
#define JD_ARCADE_SCREEN_DISPLAY_FLAGS_COLUMN_MAJOR 0x0
#define JD_ARCADE_SCREEN_DISPLAY_FLAGS_ROW_MAJOR 0x1
#define JD_ARCADE_SCREEN_DISPLAY_FLAGS_UPSCALE2X 0x2

/**
 * No args. Announces display capabilities and logical size
 * (320x240 screen with `Upscale2x` will report 160x120).
 */
#define JD_ARCADE_SCREEN_CMD_ANNOUNCE JD_CMD_ANNOUNCE

/**
 * Report: 
 */
typedef struct jd_arcade_screen_announce_report {
    uint8_t flags;  // DisplayFlags
    uint8_t bits_per_pixel;
    uint16_t width;
    uint16_t height;
} jd_arcade_screen_announce_report_t;


/**
 * Sets the update window for subsequent `set_pixels` commands.
 */
#define JD_ARCADE_SCREEN_CMD_START_UPDATE 0x81
typedef struct jd_arcade_screen_start_update {
    uint16_t x;
    uint16_t y;
    uint16_t width;
    uint16_t height;
} jd_arcade_screen_start_update_t;


/**
 * Argument: pixels bytes. Set pixels in current window, according to current palette.
 */
#define JD_ARCADE_SCREEN_CMD_SET_PIXELS 0x83

/**
 * Read-write ratio uint8_t. Set backlight brightness.
 * If set to `0` the display may go to sleep.
 */
#define JD_ARCADE_SCREEN_REG_BRIGHTNESS JD_REG_INTENSITY

/**
 * The current palette.
 * The color entry repeats `1 << bits_per_pixel` times.
 * This register may be write-only.
 */
#define JD_ARCADE_SCREEN_REG_PALETTE 0x80
typedef struct jd_arcade_screen_palette {
    uint8_t blue; // ratio
    uint8_t green; // ratio
    uint8_t red; // ratio
    uint8_t padding;
} jd_arcade_screen_palette_t;


#endif
