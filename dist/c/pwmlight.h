// Autogenerated C header file for PWM Light
#ifndef _JACDAC_SPEC_PWM_LIGHT_H
#define _JACDAC_SPEC_PWM_LIGHT_H 1

#define JD_PWM_LIGHT_SERVICE_CLASS 0x1fb57453

/**
 * Read-write ratio uint16_t. Set the luminosity of the strip. The value is used to scale `start_intensity` in `steps` register.
 * At `0` the power to the strip is completely shut down.
 */
#define JD_PWM_LIGHT_REG_BRIGHTNESS JD_REG_INTENSITY

/** Read-write mA uint16_t. Limit the power drawn by the light-strip (and controller). */
#define JD_PWM_LIGHT_REG_MAX_POWER JD_REG_MAX_POWER

/** Constant uint8_t. Maximum number of steps allowed in animation definition. This determines the size of the `steps` register. */
#define JD_PWM_LIGHT_REG_MAX_STEPS 0x180

/**
 * The steps of current animation. Setting this also sets `current_iteration` to `0`.
 * Step with `duration == 0` is treated as an end marker.
 */
#define JD_PWM_LIGHT_REG_STEPS 0x82
typedef struct jd_pwm_light_steps {
    uint16_t start_intensity; // ratio
    uint16_t duration; // ms
} jd_pwm_light_steps_t;


/**
 * Read-write uint16_t. Currently excecuting iteration of animation. Can be set to `0` to restart current animation.
 * If `current_iteration > max_iterations`, then no animation is currently running.
 */
#define JD_PWM_LIGHT_REG_CURRENT_ITERATION 0x80

/** Read-write uint16_t. The animation will be repeated `max_iterations + 1` times. */
#define JD_PWM_LIGHT_REG_MAX_ITERATIONS 0x81

#endif
