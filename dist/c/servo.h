// Autogenerated C header file for Servo
#ifndef _JACDAC_SPEC_SERVO_H
#define _JACDAC_SPEC_SERVO_H 1

#define JD_SERVICE_CLASS_SERVO  0x12fc9103

// enum Variant (uint8_t)
#define JD_SERVO_VARIANT_POSITIONAL_ROTATION 0x1
#define JD_SERVO_VARIANT_LINEAR 0x2

/**
 * Read-write ° i16.16 (int32_t). Specifies the angle of the arm.
 */
#define JD_SERVO_REG_ANGLE JD_REG_VALUE

/**
 * Read-write bool (uint8_t). Turn the power to the servo on/off.
 */
#define JD_SERVO_REG_ENABLED JD_REG_INTENSITY

/**
 * Read-write ° i16.16 (int32_t). Correction applied to the angle to account for the servo arm drift.
 */
#define JD_SERVO_REG_OFFSET 0x81

/**
 * Read-write ° i16.16 (int32_t). Lowest angle that can be set.
 */
#define JD_SERVO_REG_MIN_ANGLE 0x82

/**
 * Read-write μs uint16_t. The length of pulse corresponding to lowest angle.
 */
#define JD_SERVO_REG_MIN_PULSE 0x83

/**
 * Read-write ° i16.16 (int32_t). Highest angle that can be set.
 */
#define JD_SERVO_REG_MAX_ANGLE 0x84

/**
 * Read-write μs uint16_t. The length of pulse corresponding to highest angle.
 */
#define JD_SERVO_REG_MAX_PULSE 0x85

/**
 * Constant Variant (uint8_t). Specifies the type of servo motor.
 * * Positional Rotation Servos: Positional servos can rotate the shaft in about half of the circle,
 * with features to avoid over-rotating. Most servo have a range of 180° but some allow 270° or 360°.
 * * Linear Servos: linear servos are also like a positional servo, but with additional gears to the adjust the output from circular to back-and-forth.
 */
#define JD_SERVO_REG_VARIANT JD_REG_VARIANT

/**
 * Constant kg/cm u16.16 (uint32_t). The servo motor will stop rotating when it is trying to move a ``stall_torque`` weight at a radial distance of ``1.0`` cm.
 */
#define JD_SERVO_REG_STALL_TORQUE 0x180

/**
 * Constant s/60° u16.16 (uint32_t). Time to move 60°.
 */
#define JD_SERVO_REG_RESPONSE_SPEED 0x181

#endif
