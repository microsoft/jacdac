// Autogenerated C header file for Thermocouple
#ifndef _JACDAC_SPEC_THERMOCOUPLE_H
#define _JACDAC_SPEC_THERMOCOUPLE_H 1

#define JD_SERVICE_CLASS_THERMOCOUPLE  0x143ac061

// enum Variant (uint8_t)
#define JD_THERMOCOUPLE_VARIANT_TYPE_K 0x1
#define JD_THERMOCOUPLE_VARIANT_TYPE_J 0x2
#define JD_THERMOCOUPLE_VARIANT_TYPE_T 0x3
#define JD_THERMOCOUPLE_VARIANT_TYPE_E 0x4
#define JD_THERMOCOUPLE_VARIANT_TYPE_N 0x5
#define JD_THERMOCOUPLE_VARIANT_TYPE_S 0x6
#define JD_THERMOCOUPLE_VARIANT_TYPE_R 0x7
#define JD_THERMOCOUPLE_VARIANT_TYPE_B 0x8

/**
 * Read-only 째C i22.10 (int32_t). The temperature.
 */
#define JD_THERMOCOUPLE_REG_TEMPERATURE JD_REG_READING

/**
 * Constant 째C i22.10 (int32_t). Lowest temperature that can be reported.
 */
#define JD_THERMOCOUPLE_REG_MIN_TEMPERATURE JD_REG_MIN_READING

/**
 * Constant 째C i22.10 (int32_t). Highest temperature that can be reported.
 */
#define JD_THERMOCOUPLE_REG_MAX_TEMPERATURE JD_REG_MAX_READING

/**
 * Read-only 째C u22.10 (uint32_t). The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`.
 */
#define JD_THERMOCOUPLE_REG_TEMPERATURE_ERROR JD_REG_READING_ERROR

/**
 * Constant Variant (uint8_t). Specifies the type of thermometer.
 */
#define JD_THERMOCOUPLE_REG_VARIANT JD_REG_VARIANT

#endif
