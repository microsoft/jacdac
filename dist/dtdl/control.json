{
    "@type": "Interface",
    "@id": "dtmi:jacdac:control;1",
    "name": "ctrl",
    "displayName": "Control",
    "description": "Control service is always service index `0`.\nIt handles actions common to all services on a device.",
    "contents": [
        {
            "@type": "Command",
            "name": "services",
            "@id": "dtmi:jacdac:control:command:services;1",
            "description": "The `restart_counter` starts at `0x1` and increments by one until it reaches `0xf`, then it stays at `0xf`.\nIf this number ever goes down, it indicates that the device restarted.\nThe upper 4 bits of `restart_counter` are reserved.\n`service_class` indicates class identifier for each service index (service index `0` is always control, so it's\nskipped in this enumeration).\nThe command form can be used to induce report, which is otherwise broadcast every 500ms."
        },
        {
            "@type": "Unsupportedreport",
            "name": "services",
            "@id": "dtmi:jacdac:control:report:services;1",
            "description": "The `restart_counter` starts at `0x1` and increments by one until it reaches `0xf`, then it stays at `0xf`.\nIf this number ever goes down, it indicates that the device restarted.\nThe upper 4 bits of `restart_counter` are reserved.\n`service_class` indicates class identifier for each service index (service index `0` is always control, so it's\nskipped in this enumeration).\nThe command form can be used to induce report, which is otherwise broadcast every 500ms."
        },
        {
            "@type": "Command",
            "name": "noop",
            "@id": "dtmi:jacdac:control:command:noop;1",
            "description": "Do nothing. Always ignored. Can be used to test ACKs."
        },
        {
            "@type": "Command",
            "name": "identify",
            "@id": "dtmi:jacdac:control:command:identify;1",
            "description": "Blink an LED or otherwise draw user's attention."
        },
        {
            "@type": "Command",
            "name": "reset",
            "@id": "dtmi:jacdac:control:command:reset;1",
            "description": "Reset device. ACK may or may not be sent."
        },
        {
            "@type": "Property",
            "name": "device_description",
            "@id": "dtmi:jacdac:control:const:device_description;1",
            "description": "Identifies the type of hardware (eg., ACME Corp. Servo X-42 Rev C)",
            "schema": "string"
        },
        {
            "@type": "Property",
            "name": "firmware_identifier",
            "@id": "dtmi:jacdac:control:const:firmware_identifier;1",
            "description": "A numeric code for the string above; used to identify firmware images and devices.",
            "schema": "integer"
        },
        {
            "@type": "Property",
            "name": "bootloader_firmware_identifier",
            "@id": "dtmi:jacdac:control:const:bootloader_firmware_identifier;1",
            "description": "Typically the same as `firmware_identifier` unless device was flashed by hand; the bootloader will respond to that code.",
            "schema": "integer"
        },
        {
            "@type": "Property",
            "name": "firmware_version",
            "@id": "dtmi:jacdac:control:const:firmware_version;1",
            "description": "A string describing firmware version; typically semver.",
            "schema": "string"
        },
        {
            "@type": [
                "Property",
                "Temperature"
            ],
            "name": "temperature",
            "@id": "dtmi:jacdac:control:ro:temperature;1",
            "description": "MCU temperature in degrees Celsius (approximate).",
            "unit": "degreeCelsius",
            "schema": "integer"
        },
        {
            "@type": [
                "Property",
                "TimeSpan"
            ],
            "name": "uptime",
            "@id": "dtmi:jacdac:control:ro:uptime;1",
            "description": "Number of microseconds since boot.",
            "unit": "microsecond",
            "schema": "integer"
        }
    ],
    "schemas": [
        {
            "@type": "Enum",
            "@id": "dtmi:jacdac:x0:AnnounceFlags;1",
            "name": "AnnounceFlags",
            "valueSchema": "integer",
            "enumValues": [
                {
                    "name": "SupportsACK",
                    "enumValue": 1
                }
            ]
        }
    ],
    "@context": "dtmi:dtdl:context;2"
}