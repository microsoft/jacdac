{
  "name": "Arcade screen",
  "status": "experimental",
  "shortId": "arcadescreen",
  "camelName": "arcadeScreen",
  "shortName": "arcadeScreen",
  "extends": [
    "_base"
  ],
  "notes": {
    "short": "A screen with indexed colors.\n\nThis is typically run over an SPI connection, not regular single-wire JACDAC.",
    "commands": "`RowMajor` is typical for computer screens, while most landscape embedded LCDs use `ColumnMajor`.\n`Upscale2x` means the physical resolution of the screen is double the reported resolution,\nand the screen will internally upscale."
  },
  "classIdentifier": 385496805,
  "enums": {
    "DisplayFlags": {
      "name": "DisplayFlags",
      "storage": 1,
      "isFlags": true,
      "members": {
        "ColumnMajor": 0,
        "RowMajor": 1,
        "Upscale2x": 2
      }
    }
  },
  "packets": [
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet. If a service implements this register,\nit should also support the ``status_code_changed`` event defined below.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "command",
      "name": "announce",
      "identifier": 0,
      "description": "Announces display capabilities and logical size\n(320x240 screen with `Upscale2x` will report 160x120).",
      "fields": [],
      "identifierName": "announce",
      "hasReport": true
    },
    {
      "kind": "report",
      "name": "announce",
      "identifier": 0,
      "description": "Announces display capabilities and logical size\n(320x240 screen with `Upscale2x` will report 160x120).",
      "fields": [
        {
          "name": "flags",
          "unit": "",
          "type": "DisplayFlags",
          "storage": 1
        },
        {
          "name": "bits_per_pixel",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "width",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "height",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "secondary": true,
      "packFormat": "u8 u8 u16 u16"
    },
    {
      "kind": "command",
      "name": "start_update",
      "identifier": 129,
      "description": "Sets the update window for subsequent `set_pixels` commands.",
      "fields": [
        {
          "name": "x",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "y",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "width",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "height",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "packFormat": "u16 u16 u16 u16"
    },
    {
      "kind": "command",
      "name": "set_pixels",
      "identifier": 131,
      "description": "Set pixels in current window, according to current palette.",
      "fields": [
        {
          "name": "pixels",
          "unit": "",
          "type": "bytes",
          "storage": 0,
          "isSimpleType": true
        }
      ],
      "packFormat": "b"
    },
    {
      "kind": "rw",
      "name": "brightness",
      "identifier": 1,
      "description": "Set backlight brightness.\nIf set to `0` the display may go to sleep.",
      "fields": [
        {
          "name": "_",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1
        }
      ],
      "identifierName": "intensity",
      "packFormat": "u0.8"
    },
    {
      "kind": "rw",
      "name": "palette",
      "identifier": 128,
      "description": "The current palette.\nThe color entry repeats `1 << bits_per_pixel` times.\nThis register may be write-only.",
      "fields": [
        {
          "name": "blue",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1,
          "startRepeats": true
        },
        {
          "name": "green",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1
        },
        {
          "name": "red",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1
        },
        {
          "name": "padding",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "packFormat": "r: u0.8 u0.8 u0.8 u8"
    }
  ],
  "tags": []
}