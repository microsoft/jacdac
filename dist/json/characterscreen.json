{
  "name": "Character Screen",
  "status": "experimental",
  "shortId": "characterscreen",
  "camelName": "characterScreen",
  "shortName": "characterScreen",
  "extends": [
    "_base"
  ],
  "notes": {
    "short": "A screen that displays characters."
  },
  "classIdentifier": 523748714,
  "enums": {
    "Variant": {
      "name": "Variant",
      "storage": 1,
      "members": {
        "LCD": 1,
        "OLED": 2
      }
    },
    "TextDirection": {
      "name": "TextDirection",
      "storage": 1,
      "members": {
        "LeftToRight": 1,
        "RightToLeft": 2
      }
    }
  },
  "packets": [
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet. If a service implements this register,\nit should also support the ``status_code_changed`` event defined below.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "message",
      "identifier": 2,
      "description": "Text to show. Use `\\n` to break lines.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "identifierName": "value",
      "packFormat": "s"
    },
    {
      "kind": "rw",
      "name": "brightness",
      "identifier": 1,
      "description": "Brightness of the screen. `0` means off.",
      "fields": [
        {
          "name": "_",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1
        }
      ],
      "identifierName": "intensity",
      "packFormat": "u0.8"
    },
    {
      "kind": "const",
      "name": "variant",
      "identifier": 263,
      "description": "Describes the type of character LED screen.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "Variant",
          "storage": 1
        }
      ],
      "optional": true,
      "identifierName": "variant",
      "packFormat": "u8"
    },
    {
      "kind": "rw",
      "name": "text_direction",
      "identifier": 130,
      "description": "Specifies the RTL or LTR direction of the text.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "TextDirection",
          "storage": 1
        }
      ],
      "optional": true,
      "packFormat": "u8"
    },
    {
      "kind": "const",
      "name": "rows",
      "identifier": 384,
      "description": "Gets the number of rows.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "packFormat": "u8"
    },
    {
      "kind": "const",
      "name": "columns",
      "identifier": 385,
      "description": "Gets the number of columns.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "packFormat": "u8"
    }
  ],
  "tags": [
    "display"
  ]
}