{
  "name": "Role Manager",
  "status": "experimental",
  "shortId": "rolemanager",
  "camelName": "roleManager",
  "shortName": "roleManager",
  "extends": [
    "_base"
  ],
  "notes": {
    "short": "Assign roles to services on the Jacdac bus.\n\nInternally, the role manager stores a mapping from from `(device_id, service_idx)` to role name.\nUsers refer to services by using role names (eg., they instantiate an accelerometer client with a given role name).\nEach client has a role, and roles are unique to clients\n(ie., one should not have both a gyro and accelerometer service with role `left_leg`).\n\nRole names can be hierarchical, using slash character as a separator.\nExamples: `left_leg/acc`, `left_leg/gyro`, `right_leg/acc`.\nIf two roles share the prefix before first slash, it should be used as a hint that the services\nshould be co-located on a single device\n(eg., here the `left_leg` \"location\" is expected to have both an accelerometer and a gyro service on a single device)."
  },
  "classIdentifier": 508264038,
  "enums": {},
  "packets": [
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet. If a service implements this register,\nit should also support the ``status_code_changed`` event defined below.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "auto_bind",
      "identifier": 128,
      "description": "Normally, if some roles are unfilled, and there are idle services that can fulfill them,\nthe brain device will assign roles (bind) automatically.\nSuch automatic assignment happens every second or so, and is trying to be smart about \nco-locating roles that share \"host\" (part before first slash),\nas well as reasonably stable assignments.\nOnce user start assigning roles manually using this service, auto-binding should be disabled to avoid confusion.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bool",
          "storage": 1,
          "defaultValue": 1
        }
      ],
      "packFormat": "u8"
    },
    {
      "kind": "ro",
      "name": "all_roles_allocated",
      "identifier": 385,
      "description": "Indicates if all required roles have been allocated to devices.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bool",
          "storage": 1
        }
      ],
      "packFormat": "u8"
    },
    {
      "kind": "command",
      "name": "get_role",
      "identifier": 128,
      "description": "Get the role corresponding to given device identifer. Returns empty string if unset.",
      "fields": [
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8
        },
        {
          "name": "service_idx",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "hasReport": true,
      "packFormat": "b[8] u8"
    },
    {
      "kind": "report",
      "name": "get_role",
      "identifier": 128,
      "description": "Get the role corresponding to given device identifer. Returns empty string if unset.",
      "fields": [
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8
        },
        {
          "name": "service_idx",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "role",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "secondary": true,
      "packFormat": "b[8] u8 s"
    },
    {
      "kind": "command",
      "name": "set_role",
      "identifier": 129,
      "description": "Set role. Can set to empty to remove role binding.",
      "fields": [
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8
        },
        {
          "name": "service_idx",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "role",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "packFormat": "b[8] u8 s"
    },
    {
      "kind": "command",
      "name": "clear_all_roles",
      "identifier": 132,
      "description": "Remove all role bindings.",
      "fields": []
    },
    {
      "kind": "command",
      "name": "list_stored_roles",
      "identifier": 130,
      "description": "Return all roles stored internally.",
      "fields": [
        {
          "name": "stored_roles",
          "unit": "",
          "type": "pipe",
          "storage": 12
        }
      ],
      "pipeType": "list_stored_roles",
      "packFormat": "b[12]"
    },
    {
      "kind": "pipe_report",
      "name": "stored_roles",
      "identifier": 0,
      "description": "Return all roles stored internally.",
      "fields": [
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8
        },
        {
          "name": "service_idx",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "role",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "pipeType": "list_stored_roles",
      "packFormat": "b[8] u8 s"
    },
    {
      "kind": "command",
      "name": "list_required_roles",
      "identifier": 131,
      "description": "List all roles required by the current program. `device_id` and `service_idx` are `0` if role is unbound.",
      "fields": [
        {
          "name": "required_roles",
          "unit": "",
          "type": "pipe",
          "storage": 12
        }
      ],
      "pipeType": "list_required_roles",
      "packFormat": "b[12]"
    },
    {
      "kind": "pipe_report",
      "name": "required_roles",
      "identifier": 0,
      "description": "List all roles required by the current program. `device_id` and `service_idx` are `0` if role is unbound.",
      "fields": [
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8
        },
        {
          "name": "service_class",
          "unit": "",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        },
        {
          "name": "service_idx",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "role",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "pipeType": "list_required_roles",
      "packFormat": "b[8] u32 u8 s"
    },
    {
      "kind": "event",
      "name": "change",
      "identifier": 3,
      "description": "Emit notifying that the internal state of the service changed.",
      "fields": [],
      "identifierName": "change"
    }
  ],
  "tags": []
}