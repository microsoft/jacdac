{
  "name": "Sensor Aggregator",
  "status": "experimental",
  "shortId": "sensoraggregator",
  "camelName": "sensorAggregator",
  "shortName": "sensorAggregator",
  "extends": [
    "_base"
  ],
  "notes": {
    "short": "Aggregate data from multiple sensors into a single stream\n(often used as input to machine learning models on the same device, see model runner service)."
  },
  "classIdentifier": 496034245,
  "enums": {
    "SampleType": {
      "name": "SampleType",
      "storage": 1,
      "members": {
        "U8": 8,
        "I8": 136,
        "U16": 16,
        "I16": 144,
        "U32": 32,
        "I32": 160
      }
    }
  },
  "packets": [
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet. If a service implements this register,\nit should also support the ``status_code_changed`` event defined below.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "inputs",
      "identifier": 128,
      "description": "Set automatic input collection.\nThese settings are stored in flash.",
      "fields": [
        {
          "name": "sampling_interval",
          "unit": "ms",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "samples_in_window",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "reserved",
          "unit": "",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        },
        {
          "name": "device_id",
          "unit": "",
          "type": "devid",
          "storage": 8,
          "startRepeats": true
        },
        {
          "name": "service_class",
          "unit": "",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        },
        {
          "name": "service_num",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "sample_size",
          "unit": "B",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        },
        {
          "name": "sample_type",
          "unit": "",
          "type": "SampleType",
          "storage": 1
        },
        {
          "name": "sample_shift",
          "unit": "",
          "type": "i8",
          "storage": -1,
          "isSimpleType": true
        }
      ],
      "packFormat": "u16 u16 u32 r: b[8] u32 u8 u8 u8 i8"
    },
    {
      "kind": "ro",
      "name": "num_samples",
      "identifier": 384,
      "description": "Number of input samples collected so far.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        }
      ],
      "packFormat": "u32"
    },
    {
      "kind": "ro",
      "name": "sample_size",
      "identifier": 385,
      "description": "Size of a single sample.",
      "fields": [
        {
          "name": "_",
          "unit": "B",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "packFormat": "u8"
    },
    {
      "kind": "rw",
      "name": "streaming_samples",
      "identifier": 129,
      "description": "When set to `N`, will stream `N` samples as `current_sample` reading.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        }
      ],
      "packFormat": "u32"
    },
    {
      "kind": "ro",
      "name": "current_sample",
      "identifier": 257,
      "description": "Last collected sample.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bytes",
          "storage": 0,
          "isSimpleType": true
        }
      ],
      "identifierName": "reading",
      "packFormat": "b"
    }
  ],
  "tags": []
}