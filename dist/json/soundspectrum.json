{
  "name": "Sound Spectrum",
  "status": "experimental",
  "shortId": "soundspectrum",
  "camelName": "soundSpectrum",
  "shortName": "soundSpectrum",
  "extends": [
    "_base",
    "_sensor"
  ],
  "notes": {
    "short": "A microphone that analyzes the sound specturm"
  },
  "classIdentifier": 360365086,
  "enums": {},
  "packets": [
    {
      "kind": "const",
      "name": "instance_name",
      "identifier": 265,
      "description": "A friendly name that describes the role of this service instance in the device.\nIt often corresponds to what's printed on the device:\nfor example, `A` for button A, or `S0` for servo channel 0.\nWords like `left` should be avoided because of localization issues (unless they are printed on the device).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "string",
          "storage": 0
        }
      ],
      "optional": true,
      "identifierName": "instance_name",
      "packFormat": "s",
      "derived": "_base"
    },
    {
      "kind": "ro",
      "name": "status_code",
      "identifier": 259,
      "description": "Reports the current state or error status of the device. ``code`` is a standardized value from \nthe Jacdac status/error codes. ``vendor_code`` is any vendor specific error code describing the device\nstate. This report is typically not queried, when a device has an error, it will typically\nadd this report in frame along with the announce packet. If a service implements this register,\nit should also support the ``status_code_changed`` event defined below.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "event",
      "name": "status_code_changed",
      "identifier": 4,
      "description": "Notifies that the status code of the service changed.",
      "fields": [
        {
          "name": "code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        },
        {
          "name": "vendor_code",
          "unit": "",
          "type": "u16",
          "storage": 2,
          "isSimpleType": true
        }
      ],
      "optional": true,
      "identifierName": "status_code_changed",
      "packFormat": "u16 u16",
      "derived": "_base"
    },
    {
      "kind": "rw",
      "name": "streaming_samples",
      "identifier": 3,
      "description": "Asks device to stream a given number of samples\n(clients will typically write `255` to this register every second or so, while streaming is required).",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "identifierName": "streaming_samples",
      "packFormat": "u8",
      "derived": "_sensor"
    },
    {
      "kind": "rw",
      "name": "streaming_interval",
      "identifier": 4,
      "description": "Period between packets of data when streaming in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true,
          "defaultValue": 100,
          "typicalMin": 1,
          "typicalMax": 60000
        }
      ],
      "identifierName": "streaming_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "const",
      "name": "streaming_preferred_interval",
      "identifier": 258,
      "description": "Preferred default streaming interval for sensor in milliseconds.",
      "fields": [
        {
          "name": "_",
          "unit": "ms",
          "type": "u32",
          "storage": 4,
          "isSimpleType": true
        }
      ],
      "internal": true,
      "optional": true,
      "identifierName": "streaming_preferred_interval",
      "packFormat": "u32",
      "derived": "_sensor"
    },
    {
      "kind": "ro",
      "name": "frequency_bins",
      "identifier": 257,
      "description": "The computed frequency data.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bytes",
          "storage": 0,
          "isSimpleType": true
        }
      ],
      "identifierName": "reading",
      "packFormat": "b"
    },
    {
      "kind": "rw",
      "name": "enabled",
      "identifier": 1,
      "description": "Turns on/off the micropohone.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "bool",
          "storage": 1
        }
      ],
      "identifierName": "intensity",
      "packFormat": "u8"
    },
    {
      "kind": "rw",
      "name": "fft_pow2_size",
      "identifier": 128,
      "description": "The power of 2 used as the size of the FFT to be used to determine the frequency domain.",
      "fields": [
        {
          "name": "_",
          "unit": "",
          "type": "u8",
          "storage": 1,
          "isSimpleType": true,
          "defaultValue": 5,
          "absoluteMin": 2,
          "absoluteMax": 7
        }
      ],
      "packFormat": "u8"
    },
    {
      "kind": "rw",
      "name": "min_decibels",
      "identifier": 129,
      "description": "The minimum power value in the scaling range for the FFT analysis data",
      "fields": [
        {
          "name": "_",
          "unit": "dB",
          "type": "i16",
          "storage": -2,
          "isSimpleType": true
        }
      ],
      "packFormat": "i16"
    },
    {
      "kind": "rw",
      "name": "max_decibels",
      "identifier": 130,
      "description": "The maximum power value in the scaling range for the FFT analysis data",
      "fields": [
        {
          "name": "_",
          "unit": "dB",
          "type": "i16",
          "storage": -2,
          "isSimpleType": true
        }
      ],
      "packFormat": "i16"
    },
    {
      "kind": "rw",
      "name": "smoothing_time_constant",
      "identifier": 131,
      "description": "The averaging constant with the last analysis frame. \nIf ``0`` is set, there is no averaging done, whereas a value of ``1`` means \"overlap the previous and current buffer quite a lot while computing the value\".",
      "fields": [
        {
          "name": "_",
          "unit": "/",
          "shift": 8,
          "type": "u0.8",
          "storage": 1,
          "defaultValue": 0.8
        }
      ],
      "packFormat": "u0.8"
    }
  ],
  "tags": [
    "sound"
  ]
}